class Solution:
    def specialPerm(self, nums):
        nums.sort()  # Sort the array to ensure nums[i] % nums[j] == 0 for i > j

        n = len(nums)
        dp = [1] * n  # Initialize dp with all 1's since each number can form a special permutation by itself

        for i in range(1, n):
            for j in range(i):
                if nums[i] % nums[j] == 0:
                    dp[i] += dp[j]

        total_special_permutations = sum(dp)
        return total_special_permutations % (10**9 + 7)


# Create an instance of the Solution class
solution = Solution()

# Example 1
nums = [2, 3, 6]
print(solution.specialPerm(nums))  # Output: 2

